name: CI/CD workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout le code
        uses: actions/checkout@v3

      - name: Installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Installer les dépendances
        run: npm ci

      - name: Lint du code
        run: npm run lint || true

      - name: Build de l'application
        run: npm run build

      - name: Vérifier les vulnérabilités
        run: npm audit --production || true

  CD:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer Node.js
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Installer les dépendances
        run: npm ci

      - name: Créer .env.production
        run: echo "${{ secrets.ENV_PROD_FILE }}" | tr '\r' '\n' > .env.production

      - name: Build de l'application
        run: npm run build

      - name: Copier les fichiers sur le serveur
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/var/www/frontEnd"